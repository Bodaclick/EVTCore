imports:
    - { resource: parameters.yml }
    - { resource: security.yml }

framework:
    #esi:             ~
    #translator:      { fallback: "%locale%" }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

monolog:
    handlers:
        lead:
            type:   stream
            path:   "%kernel.logs_dir%/leads.%kernel.environment%.log"
            level:  warning
            formatter: api.monolog.json_formatter
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~

# Doctrine Configuration
doctrine:
    dbal:
        connections:
            default:
                driver:   "%database_driver%"
                host:     "%database_host%"
                port:     "%database_port%"
                dbname:   "%database_name%"
                user:     "%database_user%"
                password: "%database_password%"
                charset:  UTF8
            stats:
                driver:   "%stats_database_driver%"
                host:     "%stats_database_host%"
                port:     "%stats_database_port%"
                dbname:   "%stats_database_name%"
                user:     "%stats_database_user%"
                password: "%stats_database_password%"
                charset:  UTF8

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        default_entity_manager: default
        entity_managers:
            default:
                metadata_cache_driver: redis
                query_cache_driver: redis
                connection: default
                mappings:
                    EVTCoreDomainBundle: ~
                    EVTEvtApplication: ~
            stats:
                metadata_cache_driver: redis
                query_cache_driver: redis
                connection: stats
                mappings:
                    EVTStatsBundle: ~

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

evt_api:
    apikeys: "%apikeys%"

evt_stats:
    apikeys: "%apikeys%"

sensio_framework_extra:
    view:    { annotations: false }
    router:  { annotations: true }

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: %redis_default%
    doctrine:
        metadata_cache:
            client: default
            entity_manager: [default, stats]
            namespace: "evt:core:meta:"
        query_cache:
            client: default
            entity_manager: [default, stats]
            namespace: "evt:core:query:"


fos_rest:
    routing_loader:
        default_format:       json
        include_format:       false
    view:
        view_response_listener: force
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
        formats:
            json: true
            xml: false
            rss: false
        jsonp_handler: ~
    body_listener:
        decoders:
            json: fos_rest.decoder.json
    param_fetcher_listener: true
    access_denied_listener:
        # all requests using the 'json' format will return a 403 on an access denied violation
        json: true
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json', 'html'], fallback_format: json, prefer_extension: false }
            - { path: '^/stats', priorities: ['json', 'html'], fallback_format: json, prefer_extension: false }
            - { path: '^/', priorities: [ 'text/html'], fallback_format: html, prefer_extension: true }
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: EVT\CoreDomainBundle\Entity\GenericUser
    use_listener: false

liip_monitor:
    checks:
        php_extensions: [intl]

# OldSoundRabbitMQBundle
old_sound_rabbit_mq:
    connections:
        default:
            host:      %rabbitmq_host%
            port:      %rabbitmq_port%
            user:      %rabbitmq_user%
            password:  %rabbitmq_pass%
            vhost:     %rabbitmq_vhost%
    producers:
        events:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}

        events_showroom_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.showroom'], name:'events-showroom-queue'}

        events_lead_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.lead'], name:'events-lead-queue'}

        events_user_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.user'], name:'events-user-queue'}

        events_manager_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.manager'], name:'events-manager-queue'}

        events_employee_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.employee'], name:'events-employee-queue'}

        events_hook_queue:
            connection: default
            exchange_options: {name: 'events-exchange', type: topic, durable: true}
            queue_options:    {routing_keys: ['*.*'], name:'events-hook-queue'}

        emd_showroom_created:
            connection: default
            exchange_options: {name: 'emd_showroom_exchange', type: direct, durable: true}
            queue_options:    {name:'emd-showroom-created-queue'}

jms_serializer:
    metadata:
        directories:
            EVTDom:
                namespace_prefix: "EVT\\CoreDomain"
                path: "%kernel.root_dir%/../src/EVT/ApiBundle/Resources/config/serializer/EVTDom"

knp_paginator:
    page_range: 5                      # default page range used in pagination control
    default_options:
        page_name: page                # page query parameter name
        sort_field_name: sort          # sort field query parameter name
        sort_direction_name: direction # sort direction query parameter name
        distinct: true                 # ensure distinct results, useful when ORM queries are using GROUP BY statements